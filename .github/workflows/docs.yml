name: Sync Docs

on:
  push:
    paths:
      - 'package.json'
      - 'docs-site/**'
    branches:
      - main
  workflow_dispatch:

# GitHub Pages에 배포하기 위한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# GitHub Pages 환경 설정
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    defaults:
      run:
        working-directory: ./docs-site

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies (Root)
        run: pnpm install --no-frozen-lockfile
        working-directory: .

      - name: Install Dependencies (docs-site)
        run: pnpm install --no-frozen-lockfile

      - name: Get Golden Layout Version
        id: glver
        run: echo "GL_VERSION=$(jq -r '.dependencies["golden-layout"]' ../package.json | tr -d '^~')" >> $GITHUB_OUTPUT
        working-directory: .

      # Skip Golden Layout Docs for now
      - name: Create Golden Layout Docs Directory
        run: mkdir -p ../docs-site/static/docs/golden-layout/2.6.0

      # Skip API Docs for now
      - name: Create API Docs Directory
        run: mkdir -p ../docs-site/docs/api
      - name: Version Docusaurus Docs
        if: steps.glver.outputs.GL_VERSION != ''
        run: npm run docusaurus docs:version ${{ steps.glver.outputs.GL_VERSION }}

      - name: Build Docusaurus Site
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 업로드할 빌드 결과물 경로
          path: './docs-site/build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
